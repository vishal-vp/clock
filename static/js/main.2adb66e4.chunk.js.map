{"version":3,"sources":["assets/start.svg","assets/lap.svg","assets/pause.svg","assets/stop.svg","assets/clock.svg","assets/stopwatch.svg","components/Digit/index.js","components/SelectButton/index.js","hooks.js","components/Clock/useClockSettings.js","components/Clock/index.js","components/Stopwatch/useElapsedTime.js","components/Stopwatch/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Digit","props","value","isNaN","parseInt","className","type","disabled","readOnly","SelectButton","buttons","children","map","choice","key","selected","onClick","onSelect","useLocalStorage","initialValue","forceInitial","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","setValue","valueToStore","Function","setItem","stringify","useClockSettings","initialSettings","settings","setSettings","handleTimeFormatChange","format","TIME_FORMATS","Object","freeze","TWELVE","TWENTY_FOUR","getTimeObject","hourFormat","date","moment","Date","hours","minutes","seconds","meridiem","ClockSettings","values","TimeUnit","Clock","clockSettings","time","setTime","useEffect","timerId","setInterval","clearInterval","isHidden","STOPWATCH_STATUS","NOT_STARTED","RUNNING","PAUSED","CONTROL_ACTIONS","START","LAP","PAUSE","STOP","pad2","getLapTime","elapsedTime","e","getElapsedTimeObject","milliseconds","Math","floor","slice","split","index","NotYetStartedControls","src","startIcon","alt","RunningControls","pauseIcon","lapIcon","PausedControls","stopIcon","StopwatchControls","status","onControlAction","LapTimings","timingElements","timings","timing","Stopwatch","startTimeInitialVal","resolution","setStatus","err","startTime","setStartTime","setElapsedTime","offset","setOffset","lapTimings","setLapTimings","useRef","undefined","action","current","useElapsedTime","MODES","CLOCK","icon","clockIcon","STOPWATCH","stopwatchIcon","ToolSelection","choices","selectedTool","onToolSelect","App","mode","setMode","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2adb66e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/start.09f09527.svg\";","module.exports = __webpack_public_path__ + \"static/media/lap.d0bf0211.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.2d83b866.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop.1916a92e.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock.bf9cf15c.svg\";","module.exports = __webpack_public_path__ + \"static/media/stopwatch.7f223f10.svg\";","import React from 'react';\nimport './Digit.scss';\n\nfunction Digit(props) {\n  const value = isNaN(parseInt(props.value, 10)) ? '0' : props.value;\n  return (\n    <input className='digit' type='text' value={value} disabled={props.disabled} readOnly={true} />\n  );\n}\n\nexport default Digit;\n","import React from 'react';\nimport './SelectButton.scss';\n\n\nfunction SelectButton(props) {\n  const buttons = props.children.map(choice => (\n    <button\n      key={choice.props.value}\n      className={choice.props.value === props.selected ? 'selected': ''}\n      onClick={() => props.onSelect(choice.props.value)}>{choice}</button>\n  ));\n  return <div className='select-button'>{buttons}</div>;\n}\n\nexport default SelectButton;\n","/**\n * Global hooks required by multiple components.\n */\nimport { useState } from 'react';\n\n/* Use state that persisits to localStorage. */\nfunction useLocalStorage(key, initialValue, forceInitial = false) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      if (forceInitial) { return initialValue }\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import useLocalStorage from '../../hooks';\n\nfunction useClockSettings(initialSettings) {\n  const [settings, setSettings] = useLocalStorage('clock:settings', initialSettings);\n\n  function handleTimeFormatChange(format) {\n    setSettings({...settings, format});\n  }\n\n  return {\n    settings,\n    handleTimeFormatChange,\n  }\n}\n\nexport default useClockSettings;\n","import React, { useState, useEffect } from 'react';\nimport Digit from '../Digit';\nimport SelectButton from '../SelectButton';\nimport moment from 'moment';\nimport useClockSettings from './useClockSettings';\nimport './Clock.scss';\n\n\nconst TIME_FORMATS = Object.freeze({\n  TWELVE: 12,\n  TWENTY_FOUR: 24,\n});\n\nfunction getTimeObject(format) {\n  const hourFormat = format === TIME_FORMATS.TWELVE ? 'hh' : 'HH';\n  const date = moment(new Date());\n  const hours = date.format(hourFormat);\n  const minutes = date.format('mm');\n  const seconds = date.format('ss');\n  const meridiem = date.format('A');\n  const time = { hours, minutes, seconds, meridiem };\n  return time;\n}\n\nfunction ClockSettings(props) {\n  return (\n    <div className='clock-settings'>\n      <SelectButton\n        onSelect={props.handleTimeFormatChange}\n        selected={props.settings.format}>\n        {Object.values(TIME_FORMATS).map(choice => (\n          <span key={choice} value={choice}>{choice}</span>\n        ))}\n      </SelectButton>\n    </div>\n  );\n}\n\nfunction TimeUnit(props) {\n  return (\n    <div className='time-unit'>\n      <Digit value={props.value[0]} disabled={props.disabled} />\n      <Digit value={props.value[1]} disabled={props.disabled} />\n    </div>\n  );\n}\n\nfunction Clock(props) {\n  const clockSettings = useClockSettings({ format: TIME_FORMATS.TWELVE });\n  const [time, setTime] = useState(getTimeObject(clockSettings.settings.format));\n  useEffect(() => {\n    setTime(getTimeObject(clockSettings.settings.format));\n    const timerId = setInterval(() => {\n      setTime(getTimeObject(clockSettings.settings.format));\n    }, 1000);\n    return () => {\n      clearInterval(timerId);\n    };\n  }, [clockSettings.settings.format]);\n\n  return (\n    <div className={`clock ${props.isHidden ? 'hidden': ''}`}>\n      <ClockSettings {...clockSettings} />\n      <div className='time'>\n        <TimeUnit disabled={true} value={time.hours} />\n        <TimeUnit disabled={true} value={time.minutes} />\n        <TimeUnit disabled={true} value={time.seconds} />\n        {clockSettings.settings.format === TIME_FORMATS.TWELVE &&\n          <div className='meridiem'><span>{time.meridiem}</span></div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Clock;\n","import { useRef, useEffect } from 'react';\nimport useLocalStorage from '../../hooks';\n\nconst STOPWATCH_STATUS = Object.freeze({\n  NOT_STARTED: 'NOT_STARTED',\n  RUNNING: 'RUNNING',\n  PAUSED: 'PAUSED',\n});\n\nconst CONTROL_ACTIONS = Object.freeze({\n  START: 'START',\n  LAP: 'LAP',\n  PAUSE: 'PAUSE',\n  STOP: 'STOP',\n});\n\nfunction pad2(value) {\n  return (value < 10 ? '0' : '') + value;\n}\n\nfunction getLapTime(elapsedTime) {\n  const e = getElapsedTimeObject(elapsedTime);\n  return `${e.minutes} : ${e.seconds} : ${e.milliseconds}`;\n}\n\nfunction getElapsedTimeObject(elapsedTime) {\n  const minutes = pad2(Math.floor(elapsedTime / 1000 / 60));\n  const seconds = pad2(Math.floor((elapsedTime / 1000) % 60)).slice(0, 2);\n  const milliseconds = pad2(elapsedTime % 1000).slice(0, 2);\n  return { minutes, seconds, milliseconds };\n}\n\nfunction useElapsedTime(resolution=10) {\n  const [status, setStatus] = useLocalStorage('stopwatch:status', STOPWATCH_STATUS.NOT_STARTED);\n  // Manually load from localstorage as a date object.\n  let startTimeInitialVal;\n  try {\n    startTimeInitialVal = new Date(JSON.parse(window.localStorage.getItem('stopwatch:startTime')));\n  } catch (err) {\n    startTimeInitialVal = new Date();\n  }\n  const [startTime, setStartTime] = useLocalStorage('stopwatch:startTime', startTimeInitialVal, true);\n  const [elapsedTime, setElapsedTime] = useLocalStorage('stopwatch:elapsedTime', 0);\n  const [offset, setOffset] = useLocalStorage('stopwatch:offset', 0);\n  const [lapTimings, setLapTimings] = useLocalStorage('stopwatch:lapTimings', []);\n\n  let timerId = useRef(undefined);\n\n  useEffect(() => {\n    if (timerId.current && (status === STOPWATCH_STATUS.NOT_STARTED\n        || status === STOPWATCH_STATUS.PAUSED)) {\n      clearInterval(timerId.current);\n      timerId.current = undefined;\n    } else if (status === STOPWATCH_STATUS.RUNNING) {\n      timerId.current = setInterval(() => {\n        setElapsedTime(elapsedTime => offset + (new Date() - startTime));\n      }, resolution);\n    }\n  }, [status, startTime, offset, resolution]);\n\n  function onControlAction(action) {\n    if (action === CONTROL_ACTIONS.START) {\n      setStartTime(new Date());\n      setStatus(STOPWATCH_STATUS.RUNNING);\n    } else if (action === CONTROL_ACTIONS.PAUSE) {\n      setOffset(offset => offset + (new Date() - startTime));\n      setStatus(STOPWATCH_STATUS.PAUSED);\n    } else if (action === CONTROL_ACTIONS.LAP) {\n      setLapTimings(lapTimings => (\n        [getLapTime(elapsedTime), ...lapTimings]\n      ));\n    } else if (action === CONTROL_ACTIONS.STOP) {\n      setStartTime(undefined);\n      setElapsedTime(0);\n      setOffset(0);\n      setLapTimings([]);\n      setStatus(STOPWATCH_STATUS.NOT_STARTED);\n    }\n  }\n\n  return {\n    status,\n    elapsedTime,\n    lapTimings,\n    onControlAction,\n  }\n}\n\nexport { useElapsedTime, STOPWATCH_STATUS, CONTROL_ACTIONS, getElapsedTimeObject };\n","import React from 'react';\nimport Digit from '../Digit';\nimport startIcon from '../../assets/start.svg';\nimport lapIcon from '../../assets/lap.svg';\nimport pauseIcon from '../../assets/pause.svg';\nimport stopIcon from '../../assets/stop.svg';\nimport {\n  useElapsedTime, STOPWATCH_STATUS, CONTROL_ACTIONS, getElapsedTimeObject,\n} from './useElapsedTime';\nimport './Stopwatch.scss';\n\n\nfunction TimeUnit(props) {\n  return (\n    <div className='time-unit'>\n      {props.value.split('').map((value, index) => (\n        <Digit\n          key={index}\n          value={value}\n          disabled={props.disabled} />\n      ))}\n    </div>\n  );\n}\n\nfunction NotYetStartedControls(props) {\n  return (\n    <div className='stopwatch-controls'>\n      <button\n        className='stopwatch-control'\n        onClick={() => props.onClick(CONTROL_ACTIONS.START)}>\n        <img src={startIcon} alt='start stopwatch' />\n      </button>\n    </div>\n  )\n}\n\nfunction RunningControls(props) {\n  return (\n    <div className='stopwatch-controls'>\n      <button\n        className='stopwatch-control'\n        onClick={() => props.onClick(CONTROL_ACTIONS.PAUSE)}>\n        <img src={pauseIcon} alt='pause stopwatch' />\n      </button>\n      <button\n        className='stopwatch-control'\n        onClick={() => props.onClick(CONTROL_ACTIONS.LAP)}>\n        <img src={lapIcon} alt='note elapsed time' />\n      </button>\n    </div>\n  )\n}\n\nfunction PausedControls(props) {\n  return (\n    <div className='stopwatch-controls'>\n      <button\n        className='stopwatch-control'\n        onClick={() => props.onClick(CONTROL_ACTIONS.START)}>\n        <img src={startIcon} alt='start stopwatch' />\n      </button>\n      <button\n        className='stopwatch-control'\n        onClick={() => props.onClick(CONTROL_ACTIONS.STOP)}>\n        <img src={stopIcon} alt='stop stopwatch' />\n      </button>\n    </div>\n  )\n}\n\nfunction StopwatchControls(props) {\n  return (\n    <>\n      {props.status === STOPWATCH_STATUS.NOT_STARTED\n       && <NotYetStartedControls onClick={props.onControlAction} />}\n      {props.status === STOPWATCH_STATUS.RUNNING\n       && <RunningControls onClick={props.onControlAction} />}\n      {props.status === STOPWATCH_STATUS.PAUSED\n       && <PausedControls onClick={props.onControlAction} />}\n    </>\n  );\n}\n\nfunction LapTimings(props) {\n  const timingElements = props.timings.map((timing, index) => (\n    <tr key={timing}><td>{index + 1}.</td><td>{timing}</td></tr>\n  ));\n  return (\n    <div className='lap-timings'>\n      <table><tbody>\n        {timingElements}\n      </tbody></table>\n    </div>\n  );\n}\n\nfunction Stopwatch(props) {\n  const {status, elapsedTime, lapTimings, onControlAction} = useElapsedTime();\n  const {minutes, seconds, milliseconds} = getElapsedTimeObject(elapsedTime);\n\n  return (\n    <div className={`stopwatch ${props.isHidden ? 'hidden': ''}`}>\n      <div className='time'>\n        <TimeUnit disabled={true} value={minutes} />\n        <TimeUnit disabled={true} value={seconds} />\n        <TimeUnit disabled={true} value={milliseconds} />\n      </div>\n      <StopwatchControls status={status} onControlAction={onControlAction} />\n      <LapTimings timings={lapTimings} />\n    </div>\n  );\n}\n\nexport default Stopwatch;\n","import React from 'react';\nimport Clock from './components/Clock';\nimport Stopwatch from './components/Stopwatch';\nimport SelectButton from './components/SelectButton';\nimport clockIcon from './assets/clock.svg';\nimport stopwatchIcon from './assets/stopwatch.svg';\nimport './App.scss';\nimport useLocalStorage from './hooks';\n\nconst MODES = Object.freeze({\n  CLOCK: { value: 'clock', icon: clockIcon },\n  STOPWATCH: { value: 'stopwatch', icon: stopwatchIcon },\n});\n\nfunction ToolSelection(props) {\n  const choices = Object.values(MODES).map(choice => (\n    <img\n      src={choice.icon}\n      key={choice.value}\n      value={choice.value}\n      alt={`select ${choice.value}`} />\n  ))\n\n  return (\n    <SelectButton\n      selected={props.selectedTool}\n      onSelect={props.onToolSelect} >{choices}</SelectButton>\n  )\n}\n\nfunction App() {\n  const [mode, setMode] = useLocalStorage('app:mode', MODES.CLOCK.value);\n\n  return (\n    <div className='App'>\n      <div className='tool'>\n        <Clock isHidden={mode !== MODES.CLOCK.value} />\n        <Stopwatch isHidden={mode !== MODES.STOPWATCH.value} />\n      </div>\n      <div className='tool-selection'>\n        <ToolSelection onToolSelect={setMode} selectedTool={mode} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\nregister();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}