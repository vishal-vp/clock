{"version":3,"sources":["assets/start.svg","assets/lap.svg","assets/pause.svg","assets/stop.svg","assets/clock.svg","assets/stopwatch.svg","components/Digit/index.js","components/SelectButton/index.js","components/Clock/useClockSettings.js","components/Clock/index.js","components/Stopwatch/useElapsedTime.js","components/Stopwatch/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Digit","props","className","type","value","disabled","SelectButton","buttons","children","map","choice","key","selected","onClick","onSelect","useClockSettings","initialSettings","useState","settings","setSettings","handleTimeFormatChange","format","TIME_FORMATS","Object","freeze","TWELVE","TWENTY_FOUR","getTimeObject","hourFormat","date","moment","Date","hours","minutes","seconds","meridiem","ClockSettings","values","TimeUnit","Clock","clockSettings","time","setTime","useEffect","timerId","setInterval","clearInterval","isHidden","STOPWATCH_STATUS","NOT_STARTED","RUNNING","PAUSED","CONTROL_ACTIONS","START","LAP","PAUSE","STOP","pad2","getLapTime","elapsedTime","e","getElapsedTimeObject","milliseconds","Math","floor","slice","split","index","NotYetStartedControls","src","startIcon","alt","RunningControls","pauseIcon","lapIcon","PausedControls","stopIcon","StopwatchControls","status","onControlAction","LapTimings","timingElements","timings","timing","Stopwatch","resolution","setStatus","undefined","startTime","setStartTime","setElapsedTime","offset","setOffset","lapTimings","setLapTimings","useRef","current","console","log","action","useElapsedTime","MODES","CLOCK","icon","clockIcon","STOPWATCH","stopwatchIcon","ToolSelection","choices","selectedTool","onToolSelect","App","mode","setMode","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9d1bf45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/start.09f09527.svg\";","module.exports = __webpack_public_path__ + \"static/media/lap.d0bf0211.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.2d83b866.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop.1916a92e.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock.bf9cf15c.svg\";","module.exports = __webpack_public_path__ + \"static/media/stopwatch.7f223f10.svg\";","import React from 'react';\nimport './Digit.scss';\n\nfunction Digit(props) {\n  return (\n    <input className='digit' type='text' value={props.value} disabled={props.disabled} />\n  );\n}\n\nexport default Digit;\n","import React from 'react';\nimport './SelectButton.scss';\n\n\nfunction SelectButton(props) {\n  const buttons = props.children.map(choice => (\n    <button\n      key={choice.props.value}\n      className={choice.props.value === props.selected ? 'selected': ''}\n      onClick={() => props.onSelect(choice.props.value)}>{choice}</button>\n  ));\n  return <div className='select-button'>{buttons}</div>;\n}\n\nexport default SelectButton;\n","import { useState } from \"react\";\n\nfunction useClockSettings(initialSettings) {\n  const [settings, setSettings] = useState(initialSettings);\n\n  function handleTimeFormatChange(format) {\n    setSettings({...settings, format});\n  }\n\n  return {\n    settings,\n    handleTimeFormatChange,\n  }\n}\n\nexport default useClockSettings;\n","import React, { useState, useEffect } from 'react';\nimport Digit from '../Digit';\nimport SelectButton from '../SelectButton';\nimport moment from 'moment';\nimport useClockSettings from './useClockSettings';\nimport './Clock.scss';\n\n\nconst TIME_FORMATS = Object.freeze({\n  TWELVE: 12,\n  TWENTY_FOUR: 24,\n});\n\nfunction getTimeObject(format) {\n  const hourFormat = format === TIME_FORMATS.TWELVE ? 'hh' : 'HH';\n  const date = moment(new Date());\n  const hours = date.format(hourFormat);\n  const minutes = date.format('mm');\n  const seconds = date.format('ss');\n  const meridiem = date.format('A');\n  const time = { hours, minutes, seconds, meridiem };\n  return time;\n}\n\nfunction ClockSettings(props) {\n  return (\n    <div className='clock-settings'>\n      <SelectButton\n        onSelect={props.handleTimeFormatChange}\n        selected={props.settings.format}>\n        {Object.values(TIME_FORMATS).map(choice => (\n          <span key={choice} value={choice}>{choice}</span>\n        ))}\n      </SelectButton>\n    </div>\n  );\n}\n\nfunction TimeUnit(props) {\n  return (\n    <div className='time-unit'>\n      <Digit value={props.value[0]} disabled={props.disabled} />\n      <Digit value={props.value[1]} disabled={props.disabled} />\n    </div>\n  );\n}\n\nfunction Clock(props) {\n  const clockSettings = useClockSettings({ format: TIME_FORMATS.TWELVE });\n  const [time, setTime] = useState(getTimeObject(clockSettings.settings.format));\n  useEffect(() => {\n    setTime(getTimeObject(clockSettings.settings.format));\n    const timerId = setInterval(() => {\n      setTime(getTimeObject(clockSettings.settings.format));\n    }, 1000);\n    return () => {\n      clearInterval(timerId);\n    };\n  }, [clockSettings.settings.format]);\n\n  return (\n    <div className={`clock ${props.isHidden ? 'hidden': ''}`}>\n      <ClockSettings {...clockSettings} />\n      <div className='time'>\n        <TimeUnit disabled={true} value={time.hours} />\n        <TimeUnit disabled={true} value={time.minutes} />\n        <TimeUnit disabled={true} value={time.seconds} />\n        {clockSettings.settings.format === TIME_FORMATS.TWELVE &&\n          <div className='meridiem'><span>{time.meridiem}</span></div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Clock;\n","import { useState, useRef, useEffect } from \"react\";\n\nconst STOPWATCH_STATUS = Object.freeze({\n  NOT_STARTED: 'NOT_STARTED',\n  RUNNING: 'RUNNING',\n  PAUSED: 'PAUSED',\n});\n\nconst CONTROL_ACTIONS = Object.freeze({\n  START: 'START',\n  LAP: 'LAP',\n  PAUSE: 'PAUSE',\n  STOP: 'STOP',\n});\n\nfunction pad2(value) {\n  return (value < 10 ? '0' : '') + value;\n}\n\nfunction getLapTime(elapsedTime) {\n  const e = getElapsedTimeObject(elapsedTime);\n  return `${e.minutes} : ${e.seconds} : ${e.milliseconds}`;\n}\n\nfunction getElapsedTimeObject(elapsedTime) {\n  const minutes = pad2(Math.floor(elapsedTime / 1000 / 60));\n  const seconds = pad2(Math.floor((elapsedTime / 1000) % 60)).slice(0, 2);\n  const milliseconds = pad2(elapsedTime % 1000).slice(0, 2);\n  return { minutes, seconds, milliseconds };\n}\n\nfunction useElapsedTime(resolution=10) {\n  const [status, setStatus] = useState(STOPWATCH_STATUS.NOT_STARTED);\n  const [startTime, setStartTime] = useState(undefined);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [offset, setOffset] = useState(0);\n  const [lapTimings, setLapTimings] = useState([]);\n\n  let timerId = useRef(undefined);\n\n  useEffect(() => {\n    if (timerId.current && (status === STOPWATCH_STATUS.NOT_STARTED\n        || status === STOPWATCH_STATUS.PAUSED)) {\n      console.log('clearing interval...');\n      clearInterval(timerId.current);\n      timerId.current = undefined;\n    } else if (status === STOPWATCH_STATUS.RUNNING) {\n      console.log('setting interval...');\n      timerId.current = setInterval(() => {\n        setElapsedTime(elapsedTime => offset + (new Date() - startTime));\n      }, resolution);\n    }\n  }, [status, startTime, offset, resolution]);\n\n  function onControlAction(action) {\n    if (action === CONTROL_ACTIONS.START) {\n      setStartTime(new Date());\n      setStatus(STOPWATCH_STATUS.RUNNING);\n    } else if (action === CONTROL_ACTIONS.PAUSE) {\n      setOffset(offset => offset + (new Date() - startTime));\n      setStatus(STOPWATCH_STATUS.PAUSED);\n    } else if (action === CONTROL_ACTIONS.LAP) {\n      setLapTimings(lapTimings => (\n        [getLapTime(elapsedTime), ...lapTimings]\n      ));\n    } else if (action === CONTROL_ACTIONS.STOP) {\n      setStartTime(undefined);\n      setElapsedTime(0);\n      setOffset(0);\n      setLapTimings([]);\n      setStatus(STOPWATCH_STATUS.NOT_STARTED);\n    }\n  }\n\n  return {\n    status,\n    elapsedTime,\n    lapTimings,\n    onControlAction,\n  }\n}\n\nexport { useElapsedTime, STOPWATCH_STATUS, CONTROL_ACTIONS, getElapsedTimeObject };\n","import React from 'react';\nimport Digit from '../Digit';\nimport startIcon from '../../assets/start.svg';\nimport lapIcon from '../../assets/lap.svg';\nimport pauseIcon from '../../assets/pause.svg';\nimport stopIcon from '../../assets/stop.svg';\nimport {\n  useElapsedTime, STOPWATCH_STATUS, CONTROL_ACTIONS, getElapsedTimeObject,\n} from './useElapsedTime';\nimport './Stopwatch.scss';\n\n\nfunction TimeUnit(props) {\n  return (\n    <div className='time-unit'>\n      {props.value.split('').map((value, index) => (\n        <Digit\n          key={index}\n          value={value}\n          disabled={props.disabled} />\n      ))}\n    </div>\n  );\n}\n\nfunction NotYetStartedControls(props) {\n  return (\n    <div className='stopwatch-controls'>\n      <button\n        className='stopwatch-control'\n        onClick={() => props.onClick(CONTROL_ACTIONS.START)}>\n        <img src={startIcon} alt='start stopwatch' />\n      </button>\n    </div>\n  )\n}\n\nfunction RunningControls(props) {\n  return (\n    <div className='stopwatch-controls'>\n      <button\n        className='stopwatch-control'\n        onClick={() => props.onClick(CONTROL_ACTIONS.PAUSE)}>\n        <img src={pauseIcon} alt='pause stopwatch' />\n      </button>\n      <button\n        className='stopwatch-control'\n        onClick={() => props.onClick(CONTROL_ACTIONS.LAP)}>\n        <img src={lapIcon} alt='note elapsed time' />\n      </button>\n    </div>\n  )\n}\n\nfunction PausedControls(props) {\n  return (\n    <div className='stopwatch-controls'>\n      <button\n        className='stopwatch-control'\n        onClick={() => props.onClick(CONTROL_ACTIONS.START)}>\n        <img src={startIcon} alt='start stopwatch' />\n      </button>\n      <button\n        className='stopwatch-control'\n        onClick={() => props.onClick(CONTROL_ACTIONS.STOP)}>\n        <img src={stopIcon} alt='stop stopwatch' />\n      </button>\n    </div>\n  )\n}\n\nfunction StopwatchControls(props) {\n  return (\n    <>\n      {props.status === STOPWATCH_STATUS.NOT_STARTED\n       && <NotYetStartedControls onClick={props.onControlAction} />}\n      {props.status === STOPWATCH_STATUS.RUNNING\n       && <RunningControls onClick={props.onControlAction} />}\n      {props.status === STOPWATCH_STATUS.PAUSED\n       && <PausedControls onClick={props.onControlAction} />}\n    </>\n  );\n}\n\nfunction LapTimings(props) {\n  const timingElements = props.timings.map((timing, index) => (\n    <tr key={timing}><td>{index + 1}.</td><td>{timing}</td></tr>\n  ));\n  return (\n    <div className='lap-timings'>\n      <table><tbody>\n        {timingElements}\n      </tbody></table>\n    </div>\n  );\n}\n\nfunction Stopwatch(props) {\n  const {status, elapsedTime, lapTimings, onControlAction} = useElapsedTime();\n  const {minutes, seconds, milliseconds} = getElapsedTimeObject(elapsedTime);\n\n  return (\n    <div className={`stopwatch ${props.isHidden ? 'hidden': ''}`}>\n      <div className='time'>\n        <TimeUnit disabled={true} value={minutes} />\n        <TimeUnit disabled={true} value={seconds} />\n        <TimeUnit disabled={true} value={milliseconds} />\n      </div>\n      <StopwatchControls status={status} onControlAction={onControlAction} />\n      <LapTimings timings={lapTimings} />\n    </div>\n  );\n}\n\nexport default Stopwatch;\n","import React, { useState } from 'react';\nimport Clock from './components/Clock';\nimport Stopwatch from './components/Stopwatch';\nimport SelectButton from './components/SelectButton';\nimport clockIcon from './assets/clock.svg';\nimport stopwatchIcon from './assets/stopwatch.svg';\nimport './App.scss';\n\nconst MODES = Object.freeze({\n  CLOCK: { value: 'clock', icon: clockIcon },\n  STOPWATCH: { value: 'stopwatch', icon: stopwatchIcon },\n});\n\nfunction ToolSelection(props) {\n  const choices = Object.values(MODES).map(choice => (\n    <img\n      src={choice.icon}\n      key={choice.value}\n      value={choice.value}\n      alt={`select ${choice.value}`} />\n  ))\n\n  return (\n    <SelectButton\n      selected={props.selectedTool}\n      onSelect={props.onToolSelect} >{choices}</SelectButton>\n  )\n}\n\nfunction App() {\n  const [mode, setMode] = useState(MODES.CLOCK.value);\n\n  return (\n    <div className='App'>\n      <div className='tool'>\n        <Clock isHidden={mode !== MODES.CLOCK.value} />\n        <Stopwatch isHidden={mode !== MODES.STOPWATCH.value} />\n      </div>\n      <div className='tool-selection'>\n        <ToolSelection onToolSelect={setMode} selectedTool={mode} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\nregister();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}